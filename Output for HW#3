
#Iteration One 

# k-nn classification
dat_NYC <- subset(acs2017_ny, (acs2017_ny$in_NYC == 1)&(acs2017_ny$Hispanic=1) & (acs2017_ny$CITIZEN=5))
attach(dat_NYC)
borough_f <- factor((in_Bronx + 2*in_Manhattan + 3*in_StatenI + 4*in_Brooklyn + 5*in_Queens), levels=c(1,2,3,4,5),labels = c("Bronx","Manhattan","Staten Island","Brooklyn","Queens"))
norm_varb <- function(X_in) {(X_in - min(X_in, na.rm = TRUE))/
( max(X_in, na.rm = TRUE) - min(X_in, na.rm = TRUE) )}


is.na(HHINCOME) <- which(HHINCOME <= 30000)
is.na(FAMSIZE) <- which(FAMSIZE >=5)
norm_HHINCOME <- norm_varb(HHINCOME)
norm_FAMSIZE <- norm_varb(FAMSIZE)

# Creation of the dataframe
data_use_prelim <- data.frame(norm_HHINCOME,norm_FAMSIZE)
good_obs_data_use <- complete.cases(data_use_prelim,borough_f)
dat_use <- subset(data_use_prelim,good_obs_data_use)
y_use <- subset(borough_f,good_obs_data_use)

# 80/20 split of data into training set and validation set
set.seed(12345)
NN_obs <- sum(good_obs_data_use == 1)
select1 <- (runif(NN_obs) < 0.8)
train_data <- subset(dat_use,select1)
test_data <- subset(dat_use,(!select1))
cl_data <- y_use[select1]
true_data <- y_use[!select1]

# Running the k-nn algorithm to be compared to the subset's means
 
summary(cl_data)

Bronx     Manhattan Staten Island      Brooklyn        Queens 
3778          5096          2005         11193         10647 

prop.table(summary(cl_data))

Bronx     Manhattan Staten Island      Brooklyn        Queens 
0.11546808    0.15575048    0.06127938    0.34209481    0.32540726 
 
 summary(train_data)

norm_HHINCOME      norm_FAMSIZE   
Min.   :0.00000   Min.   :0.0000  
1st Qu.:0.01496   1st Qu.:0.3333  
Median :0.03446   Median :0.6667  
Mean   :0.05404   Mean   :0.5317  
3rd Qu.:0.06496   3rd Qu.:1.0000  
Max.   :1.00000   Max.   :1.0000  

require(class)
 for (indx in seq(1, 9, by= 2)) {
 pred_borough <- knn(train_data, test_data, cl_data, k = indx, l = 0, prob = FALSE, use.all = TRUE)
  num_correct_labels <- sum(pred_borough == true_data)
correct_rate <- num_correct_labels/length(true_data)

print(c(indx,correct_rate)) }
[1] 1.0000000 0.5388162
[1] 3.000000 0.425296
[1] 5.0000000 0.4080997
[1] 7.0000000 0.4181931
[1] 9.0000000 0.4149533

# Simple linear regression
cl_data_n <- as.numeric(cl_data)

model_ols1 <- lm(cl_data_n ~ train_data$norm_HHINCOME + train_data$norm_FAMSIZE)

y_hat <- fitted.values(model_ols1)

mean(y_hat[cl_data_n == 1])
[1] 3.659506
mean(y_hat[cl_data_n == 2])
[1] 3.496644
mean(y_hat[cl_data_n == 3])
[1] 3.636138
mean(y_hat[cl_data_n == 4])
[1] 3.605703
 mean(y_hat[cl_data_n == 5])
[1] 3.634676
 
# Iteration 2
 
 is.na(AGE) <- which(AGE<= 30)
 norm_AGE <- norm_varb(AGE)

# Creation of the dataframe
data_use_prelim <- data.frame(norm_HHINCOME,norm_FAMSIZE,norm_AGE)
good_obs_data_use <- complete.cases(data_use_prelim,borough_f)
dat_use1 <- subset(data_use_prelim,good_obs_data_use)
x_use <- subset(borough_f,good_obs_data_use)
 
# 80/20 split of data into training set and validation set
set.seed(12345)
NN_obs <- sum(good_obs_data_use == 1)
select2 <- (runif(NN_obs) < 0.8)
train_data1 <- subset(dat_use1,select2)
test_data1 <- subset(dat_use1,(!select2))
cl_data1 <- x_use[select2]
true_data1 <- x_use[!select2]
 
 # Running the k-nn algorithm to be compared to the subset's means
 summary(cl_data1)

Bronx     Manhattan Staten Island      Brooklyn        Queens 
 2453          3289          1430          7228          7350 
 
 prop.table(summary(cl_data1))

Bronx     Manhattan Staten Island      Brooklyn        Queens 
 0.11278161    0.15121839    0.06574713    0.33232184    0.33793103 

summary(train_data1)
 
 norm_HHINCOME      norm_FAMSIZE       norm_AGE     
 Min.   :0.00000   Min.   :0.0000   Min.   :0.0000  
 1st Qu.:0.01496   1st Qu.:0.3333   1st Qu.:0.1406  
 Median :0.03406   Median :0.3333   Median :0.3281  
 Mean   :0.05500   Mean   :0.4895   Mean   :0.3474  
 3rd Qu.:0.06496   3rd Qu.:0.6667   3rd Qu.:0.5156  
 Max.   :0.81649   Max.   :1.0000   Max.   :1.0000  
 
 require(class)
  for (indx in seq(1, 9, by= 2)) 
 pred_borough <- knn(train_data, test_data1, cl_data1, k = indx, l = 0, prob = FALSE, use.all = TRUE)
num_correct_labels1 <- sum(pred_borough == true_data1)
correct_rate1 <- num_correct_labels1/length(true_data1)
 print(c(indx,correct_rate))
[1] 1.0000000 0.4149533
 
 #Iteration 3
 
 is.na(RENT) <- which(RENT<= 1000)
 norm_RENT <- norm_varb(RENT)
 
# Creation of the dataframe
data_use_prelim <- data.frame(norm_HHINCOME,norm_FAMSIZE,norm_RENT)
good_obs_data_use <- complete.cases(data_use_prelim,borough_f)
dat_use2 <- subset(data_use_prelim,good_obs_data_use)
z_use <- subset(borough_f,good_obs_data_use)
 
# 80/20 split of data into training set and validation set
set.seed(12345)
NN_obs <- sum(good_obs_data_use == 1)
select3 <- (runif(NN_obs) < 0.8)
train_data2 <- subset(dat_use1,select3)
test_data2 <- subset(dat_use1,(!select3))
cl_data2 <- z_use[select3]
true_data2 <- z_use[!select2]

# Running the k-nn algorithm to be compared to the subset's means
summary(cl_data2)

Bronx     Manhattan Staten Island      Brooklyn        Queens 
1539          2735           259          4704          3885 

prop.table(summary(cl_data2))

Bronx     Manhattan Staten Island      Brooklyn        Queens 
0.11728395    0.20842859    0.01973784    0.35848194    0.29606767 
 
 summary(train_data2)

norm_HHINCOME      norm_FAMSIZE       norm_AGE     
Min.   :0.00000   Min.   :0.0000   Min.   :0.0000  
1st Qu.:0.01496   1st Qu.:0.3333   1st Qu.:0.1406  
Median :0.03369   Median :0.3333   Median :0.3438  
Mean   :0.05490   Mean   :0.4916   Mean   :0.3492  
3rd Qu.:0.06496   3rd Qu.:0.6667   3rd Qu.:0.5156  
Max.   :1.00000   Max.   :1.0000   Max.   :1.0000  

require(class)
 for (indx in seq(1, 9, by= 2)) 
pred_borough <- knn(train_data, test_data1, cl_data1, k = indx, l = 0, prob = FALSE, use.all = TRUE)
num_correct_labels2 <- sum(pred_borough == true_data2)
correct_rate2 <- num_correct_labels2/length(true_data2)
print(c(indx,correct_rate))
[1] 1.0000000 0.4149533
 
